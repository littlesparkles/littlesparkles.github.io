<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-11-29T12:51:03+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jimin’s Blog</title><subtitle>You cannot be happy everyday, but there are happy things everyday!</subtitle><entry><title type="html">About Markdown</title><link href="http://localhost:4000/jekyll/update/2022/11/29/Markdown.html" rel="alternate" type="text/html" title="About Markdown" /><published>2022-11-29T10:27:40+09:00</published><updated>2022-11-29T10:27:40+09:00</updated><id>http://localhost:4000/jekyll/update/2022/11/29/Markdown</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2022/11/29/Markdown.html"><![CDATA[<h2 id="markdown이란-무엇인가">Markdown이란 무엇인가</h2>
<ul>
  <li>마크업 언어로, 텍스트를 통해 문서의 형태를 명시하는 방법</li>
  <li><a href="https://www.markdownguide.org/basic-syntax/">Markdown 문법 학습하기</a></li>
</ul>

<h2 id="markdown의-장점">Markdown의 장점</h2>
<ol>
  <li>다양한 분야에서 사용 가능
    <ul>
      <li>사람들은 웹 사이트, 문서, 노트, 책, 프리젠테이션, 전자 메일 메시지 및 기술 문서를 만드는 데 사용</li>
    </ul>
  </li>
  <li>가벼움
    <ul>
      <li>마크다운 형식의 텍스트가 들어 있는 파일은 거의 모든 응용 프로그램을 사용하여 열 수 있다.</li>
      <li>현재 사용 중인 마크다운 응용 프로그램이 마음에 들지 않으면 다른 마크다운 응용 프로그램으로 마크다운 파일을 가져올 수 있다.</li>
    </ul>
  </li>
  <li>플랫폼에 의존하지 않음
    <ul>
      <li>운영 체제를 실행하는 모든 장치에서 마크다운 형식의 텍스트를 만들 수 있다.</li>
    </ul>
  </li>
  <li>미래 걱정이 없음
    <ul>
      <li>사용 중인 응용 프로그램이 나중에 작동을 중지하더라도 텍스트 편집 응용 프로그램을 사용하여 마크다운 형식의 텍스트를 읽을 수 있다.</li>
    </ul>
  </li>
  <li>마크다운은 어디에나 있음
    <ul>
      <li>Reddit 및 GitHub와 같은 웹 사이트는 Markdown을 지원하며 많은 데스크톱 및 웹 기반 응용 프로그램이 이를 지원한다.</li>
    </ul>
  </li>
</ol>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Markdown이란 무엇인가 마크업 언어로, 텍스트를 통해 문서의 형태를 명시하는 방법 Markdown 문법 학습하기]]></summary></entry><entry><title type="html">About Jekyll</title><link href="http://localhost:4000/jekyll/update/2022/11/29/Jekyll.html" rel="alternate" type="text/html" title="About Jekyll" /><published>2022-11-29T09:58:26+09:00</published><updated>2022-11-29T09:58:26+09:00</updated><id>http://localhost:4000/jekyll/update/2022/11/29/Jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2022/11/29/Jekyll.html"><![CDATA[<h2 id="jekyll이란-무엇인가">Jekyll이란 무엇인가</h2>

<ul>
  <li>텍스트 변환 엔진으로, 마크업 언어로 글을 작성하면 미리 정의해 놓은 규칙에 따라서 정적인 웹사이트를 만들어줌
    <ul>
      <li>이 과정에서 원하는 기능들을 구현할 수 있다.</li>
    </ul>
  </li>
  <li>정적인 웹사이트를 만들기 때문에, PHP 등의 서버 소프트웨어가 필요 없어, 매우 빠르고 가볍다.</li>
  <li>기본적인 형식
    <ul>
      <li>마크다운 언어로 작성한 포스트를 github에서 commit &amp; push한다.</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Jekyll이란 무엇인가]]></summary></entry><entry><title type="html">About Github</title><link href="http://localhost:4000/jekyll/update/2022/11/29/Github.html" rel="alternate" type="text/html" title="About Github" /><published>2022-11-29T09:57:28+09:00</published><updated>2022-11-29T09:57:28+09:00</updated><id>http://localhost:4000/jekyll/update/2022/11/29/Github</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2022/11/29/Github.html"><![CDATA[<h2 id="github란-무엇인가">Github란 무엇인가</h2>

<ul>
  <li>원격 저장소를 호스팅하는 플랫폼</li>
  <li>소프트웨어 프로젝트를 저장, 추적 및 협업하는 데 사용
    <ul>
      <li>개발자는 자신의 코드 파일을 업로드하고 오픈 소스 프로젝트에서 동료 개발자와 협업할 수 있다.</li>
      <li>개발자들이 공개적으로 네트워크 연결, 협업 및 작업 피칭을 할 수 있는 소셜 네트워킹 사이트 역할을 한다.</li>
    </ul>
  </li>
</ul>

<h2 id="github의-장점">Github의 장점</h2>

<ol>
  <li>협업의 효율화
    <ul>
      <li>버전 제어 및 액세스 제어를 포함한 일련의 프로젝트 협업 기능</li>
      <li>몇 명, 수십 명, 심지어 수천 명의 개발자가 다른 사람의 작업을 무시하거나 변경 사항을 추적할 걱정 없이 프로젝트에 원활하게 기여할 수 있는 Centralized Workspace을 제공</li>
    </ul>
  </li>
  <li>쉬운 파일 관리
    <ul>
      <li>GitHub의 인터페이스는 Git 작업을 수행하고 파일 기록을 볼 수 있는 깨끗하고 사용자 친화적인 수단을 제공
        <ul>
          <li>개발자에게 더 편리하고 Git에 정통한 초보자에게 더 쉽게 접근할 수 있다.</li>
        </ul>
      </li>
      <li>클라우드 기반 인프라
        <ul>
          <li>GitHub 사용자는 모든 위치 및 장치에서 저장소에 액세스하고 리포지토리를 다운로드하고 변경사항을 적용할 수 있다.</li>
          <li>GitHub를 사용하는 것은 하나의 장치나 환경에 제한되지 않는다는 것을 의미</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>엔지니어들의 SNS
    <ul>
      <li>모든 Github 사용자는 자신의 프로젝트, 기여 및 활동을 사이트에 표시할 수 있는 프로필을 가지고 있으며 모든 사용자의 공개 프로필 및 Repository를 볼 수 있다.</li>
      <li>GitHub의 소셜 네트워크는 개발자들이 모든 종류의 오픈 소스 프로젝트를 탐색하고 기여하도록 장려한다.</li>
      <li>고용주들을 위한 프로젝트를 보여주는 하나의 방법으로, 일종의 포트폴리오 역할을 한다.</li>
    </ul>
  </li>
</ol>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Github란 무엇인가]]></summary></entry><entry><title type="html">About Git</title><link href="http://localhost:4000/jekyll/update/2022/11/29/Git.html" rel="alternate" type="text/html" title="About Git" /><published>2022-11-29T09:52:33+09:00</published><updated>2022-11-29T09:52:33+09:00</updated><id>http://localhost:4000/jekyll/update/2022/11/29/Git</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2022/11/29/Git.html"><![CDATA[<h2 id="git이란-무엇인가">Git이란 무엇인가</h2>

<ul>
  <li>가장 일반적으로 사용되는 버전 관리 시스템(version control system)</li>
  <li>파일에 대한 변경 내용을 추적하므로 수행된 작업에 대한 기록이 있으며 필요할 경우 특정 버전으로 되돌릴 수 있다.</li>
  <li>협업을 더 쉽게 만들어 여러 사람의 변경 사항을 모두 하나의 소스로 병합할 수 있게 한다.</li>
</ul>

<h2 id="git의-특징">Git의 특징</h2>

<ul>
  <li>로컬로 실행되는 소프트웨어
    <ul>
      <li>파일과 파일 기록이 컴퓨터에 저장된다.</li>
    </ul>
  </li>
  <li>온라인 호스트 (예: Github 또는 Bitbucket)를 사용하여 파일의 복사본과 해당 수정 기록을 저장할 수 있다.</li>
  <li>변경사항을 업로드하고 다른 개발자의 변경사항을 다운로드할 수 있는 중앙 위치에 있으므로 다른 개발자와 더 쉽게 협업할 수 있다.</li>
  <li>자동으로 변경 사항을 병합할 수 있으므로 두 사람이 같은 파일의 다른 부분을 작업하고 나중에 서로의 작업을 잃지 않고 변경 사항을 병합할 수 있다.</li>
</ul>

<h2 id="git-기본-용어">Git 기본 용어</h2>

<ul>
  <li>Repository: 저장소
    <ul>
      <li>작업자가 변경한 모든 히스토리를 확인 가능</li>
    </ul>
  </li>
  <li>Working Tree: 저장소를 어느 한 시점을 바라보는 작업자의 현재 시점</li>
  <li>Staging Area: 저장소에 커밋하기 전에 커밋을 준비하는 위치</li>
  <li>Commit: 현재 변경된 작업 상태를 점검을 마치면 확정하고 저장소에 저장하는 작업</li>
  <li>Head: 현재 작업중인 branch</li>
  <li>Branch: 가지/분기점
    <ul>
      <li>작업할 때에 현재 상태를 복사하여 branch에서 작업을 한 후에 완전하다 싶을 때 merge를 하여 작업을 함</li>
    </ul>
  </li>
  <li>Merge: 다른 branch의 내용을 현재 branch로 가져와 합치는 작업을 의미</li>
</ul>

<h2 id="git-기본-명령어">Git 기본 명령어</h2>

<ul>
  <li>git init: 깃 저장소 초기화</li>
  <li>git clone: 원격 저장소의 저장소를 내 로컬에서 이용할 수 있게 그대로 복사해 가져옴</li>
  <li>git status: 저장소 상태 체크</li>
  <li>git branch: 새로운 브랜치 생성, 독립적인 공간을 만듬</li>
  <li>git add: ‘staging 영역’에 변경내용 추가</li>
  <li>git commit: staging area에 있는 변경 내용 묶음 및 정의</li>
  <li>git push: 로컬 컴퓨터에서 서버로 변경사항을 “push”</li>
  <li>git pull: 서버 저장소로부터 최신 버전을 “pull”
    <ul>
      <li>저장소의 변경된 내용을 로컬(내 컴퓨터) 저장소에 적용하는 작업</li>
    </ul>
  </li>
  <li>git merge: 개별 branch에서 마친 작업을 master branch로 병합</li>
</ul>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[Git이란 무엇인가]]></summary></entry></feed>